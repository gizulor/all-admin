@use "../setup";

/* Progress meter (only used in core for setup panels)
   ========================================================================== */

/**
 * Progress meter lists.
 *
 * Utilizes CSS counters to increment the progress steps, more info -
 * https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Lists_and_Counters/Using_CSS_counters
 *
 * Example HTML:
 *
 * <aside class="progress-meter">
 *     <ol>
 *         <li class="active"><strong>Item 1</strong></li>
 *         <li>Item 2</li>
 *         <li>Item 3</li>
 *     </ol>
 * </aside>
 */

.progress-meter {
    ol {
        margin-bottom: 0;
        padding: 0;
        list-style: none;
        text-align: center;
        counter-reset: step; // set up name of increment on parent
    }

    li {
        @include setup.gradient-linear(
            var(--clr-btn-grad-from),
            var(--clr-btn-grad-to)
        );

        display: inline-block;
        position: relative;
        margin: 0 0 1em;
        margin-inline-end: 1em;
        padding: 1em;
        padding-inline-start: 4em;
        border-top: 1px solid var(--clr-brdr-lite);
        border-right: 1px solid var(--clr-brdr-x-lite);
        border-bottom: 1px solid var(--clr-brdr-dark);
        border-left: 1px solid var(--clr-brdr-x-lite);
        color: var(--clr-text-btn);

        // highlight the currently active step

        &.active {
            @include setup.gradient-linear(
                var(--clr-accent-grad-from),
                var(--clr-accent-grad-to)
            );

            border: 1px solid var(--clr-accent-grad-to);
            border-bottom-color: var(--clr-accent-dark);
        }

        // numerical indication of step

        &::before {
            content: counter(step); // write out value of the increment
            position: absolute;
            z-index: 2;
            top: 0.4375em; // 7px / 16px
            left: 0.6875em; // 12px / 16px
            width: 1.375em; // 22px / 16px
            padding: 0.25em; // 4px / 16px
            border: 1px solid var(--clr-bkgd);
            border-radius: 50%;
            background-color: var(--clr-brdr);
            font-size: 1.2307692rem; // 16px / 13px
            font-weight: 700;
            text-align: center;
            counter-increment: step; // increment the step on each occurance of this (pseudo) element
        }

        // arrows at right-hand side of boxes

        &::after {
            @include setup.hide-text;

            content: "\2192";
            display: block;
            position: absolute;
            z-index: 2;
            top: -1px;
            left: 100%;
            width: 0;
            height: 0;
            border: solid transparent;
            border-width: 1.5em 0 1.5em 0.75em;
            border-left-color: var(--clr-brdr);
            font-size: 16px;
        }
    }

    strong {
        font-weight: 400;
    }
}

@include setup.dark-mode {
    .progress-meter li::before {
        color: var(--clr-text-enforced-white);
    }
}

/**
 * Swap margin/padding/numerical/arrow positions in RTL languages.
 */

[dir="rtl"] .progress-meter {
    li {
        &::before {
            right: 0.6875em; // 12px / 16px
            left: auto;
        }

        &::after {
            content: "\2190";
            right: 100%;
            left: auto;
            border: solid transparent;
            border-width: 1.5em 0.75em 1.5em 0;
            border-right-color: var(--clr-brdr);
        }
    }
}
